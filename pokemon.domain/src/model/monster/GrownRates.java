package model.monster;

/**
 * 性格によるステータスの成長補正を保持するクラス
 * @author 1
 *
 */
public class GrownRates {

	//性格毎のステータス補正率を保持する二次元配列
	private double[][] grownRates;
	
	//0.攻撃 1.防御 2.特攻 3.特防 4.素早さ
	public GrownRates(){
		double[][] rates = {
				{1, 1, 1, 1, 1},//0.がんばりや
				{1.1, 0.9, 1, 1, 1},//1.さみしがり
				{1.1, 1, 1, 1, 0.9},//2.ゆうかん
				{1.1, 1, 0.9, 1, 1},//3.いじっぱり
				{1.1, 1, 1, 0.9, 1},//4.やんちゃ
				{0.9, 1.1, 1, 1, 1},//5.ずぶとい
				{1, 1, 1, 1, 1},//6.すなお
				{1, 1.1, 1, 1, 0.9},//7.のんき
				{1, 1.1, 0.9, 1, 1},//8.わんぱく
				{1, 1.1, 1, 0.9, 1},//9.のうてんき
				{0.9, 1, 1, 1, 1.1},//10.おくびょう
				{1, 0.9, 1, 1, 1.1},//11.せっかち
				{1, 1, 1, 1, 1},//12.まじめ
				{1, 1, 0.9, 1, 1.1},//13.ようき
				{1, 1, 1, 0.9, 1.1},//14.むじゃき
				{0.9, 1, 1.1, 1, 1},//15.ひかえめ
				{1, 0.9, 1.1, 1, 1},//16.おっとり
				{1, 1, 1.1, 1, 0.9},//17.れいせい
				{1, 1, 1, 1, 1},//18.てれや
				{1, 1, 1.1, 0.9, 1},//19.うっかりや
				{0.9, 1, 1, 1.1, 1},//20.おだやか
				{1, 0.9, 1, 1.1, 1},//21.おとなしい
				{1, 1, 1, 1.1, 0.9},//22.なまいき
				{1, 1, 0.9, 1.1, 1},//23.しんちょう
				{1, 1, 1, 1, 1},//24.きまぐれ
		};

		grownRates = rates;
		
		//TODO デバッグ用
//		for(int y =0; y < 25; y++){
//			for(int x = 0; x < 5; x++){
//				System.out.print(grownRates[y][x] + " ");
//			}
//			System.out.println();
//		}
	}
	
	public double getGrownRates(int nature, int status){
		//例："さみしがり"と"こうげき"なら[1][0]で1.1を返す
		return grownRates[nature][status];
	}
}
